// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Commands/ArmManualControl.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ArmManualControl::ArmManualControl(): frc::Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::arm.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ArmManualControl::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void ArmManualControl::Execute() {
    double intakeSpeed = Robot::oi->GetXboxRightY(false) / -2.0;

    //if (intakeSpeed > 0.0)
    //    intakeSpeed = intakeSpeed * -1.0*INTAKE_MAX_UP_SPEED;
    //else
    //    intakeSpeed = intakeSpeed * INTAKE_MAX_DOWN_SPEED;

    Robot::arm->SetIntakeArmMotor(intakeSpeed);

    
    double armSpeed = -1.0*Robot::oi->GetXboxLeftY(true);

    Robot::arm->SetArmMotorSpeed(armSpeed);
    frc::SmartDashboard::PutNumber("ArmSpeedManual", armSpeed);

    Robot::arm->SpinIntakeByXbox();
}

// Make this return true when this Command no longer needs to run execute()
bool ArmManualControl::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void ArmManualControl::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ArmManualControl::Interrupted() {

}
